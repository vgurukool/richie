FORMAT: 1A

# Search: an ElasticSearch-based read API to access richie resources

# Data Structures

## Course
A single course as saved in our ElasticSearch index. Includes all fields useful for indexing it and displaying it in the client side. Foreign keys as richie knows them (eg. Categories & Organizations) are referenced by their IDs.

+ categories: ['L00040002', 'L-00040004'] (array[string], required) - IDs of the categories with which this course has been tagged
+ cover_image: `/about.png` (string) - URL to an image, a size of the thumbnail
+ end: `2018-02-28T06:00:00Z` (string, required) - ISO 8601 date, when this session of the course ends
+ enrollment_end: `2018-01-31T06:00:00Z` (string, required) - ISO 8601 date, when enrollment for the latest session of the course ends
+ enrollment_start: `2018-01-01T06:00:00Z` (string, required) - ISO 8601 date, when enrollment for the latest session of the course starts
+ id: 42 (number, required) - SQL database ID, reused in ElasticSearch
+ languages: ['fr', 'en'] (array[string], required) - ISO 639-1 code (2 letters) for the course's languages
+ organizations: ['L00010007', 'L-00010009'] (array[string], required) - IDs of the organizations linked to this course
+ persons: [42, 44] (array[number], required) - IDs of the persons with whom this course has been associated
+ start: `2018-02-01T06:00:00Z` (string, required) - ISO 8601 date, when this session of the course starts
+ title: Python for Data Scientists (string, required) - Title for the course

## Organization
A single organization as saved in our ElasticSearch index. Includes only the fields necessary for indexing and displaying them on the consumer side.

+ id: L-00040002 (string, required) - MPTT path used as ElasticSearch index
+ logo: https://example.com/logo.png (string) - URL to and image containing the logo for the organization (smaller)
+ title: Université Paris 13 (string, required) - full text title of the organization; may be translated

## Category
A single category as saved in our ElasticSearch index. Includes a small subset of the fields and data actually contained in the CMS, in order to be as small and consumer-friendly as possible.

+ id: L-00040002 (string, required) - MPTT path used as ElasticSearch index
+ logo: https://example.com/image.png (string) - a logo for the category, only the most prominent ones have it
+ title: Computer Science (string, required)

## Person
A single person as saved in our ElasticSearch index. Includes a small subset of the fields and data actually contained in the CMS, in order to be as small and consumer-friendly as possible.

+ id: 42 (number, required) - SQL database ID, reused in ElasticSearch
+ portrait: https://example.com/image.png (string) - a logo for the category, only the most prominent ones have it
+ title: Master Miyagi (string, required)


# Group Category
Category-related resources for the richie search API.

## GET /categories/{category_id}
A single category object. Access through this API is read-only (and thus GET only) as we're interacting with ElasticSearch and not the underlying model.

See the Category data structure for more information.

+ Request
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes (Category)

## GET /categories?limit&offset&name
Collection of all categories indexed in ElasticSearch. Can be filtered and selected through search query parameters.

+ Request
    + Parameters
        + limit: 10 (number, optional) - return {limit} categories
        + offset: 0 (number, optional) - skip the first {offset} results; used for pagination
        + name: science (string, optional) - match on the name field
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes
        + meta
            + count: 10 (number, required) - number of categories effectively returned
            + offset: 0 (number, required) - number of categories skipped
            + total_count: 89 (number, required) - total number of hits for the search parameters
        + objects: array[Category]

# Group Course
Course-related resources for the richie search API.

## GET /courses/{course_id}
A single course object. Access through this API is read-only (and thus GET only) as we're interacting with ElasticSearch and not the underlying model.

See the Course data structure for more information.

+ Request
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes (Course)

## GET /courses?limit&offset&search
Collection of all courses indexed in ElasticSearch. Can be filtered and selected through search query parameters.

+ Request
    + Parameters
        + end: ["2018-04-30T06:00:00Z", "2018-06-30T06:00:00Z"] (string, optional) - JSON array containing two datetimes (or 1 datetime and null); filter courses which have a start between those two datetimes (or before/after one date if array contains null)
        + enrollment_end: ["2018-04-30T06:00:00Z", "2018-06-30T06:00:00Z"] (string, optional) - cf. end
        + enrollment_start: ["2018-04-30T06:00:00Z", "2018-06-30T06:00:00Z"] (string, optional) - cf. end
        + organizations: [13, 42] (array[number], optional) - return courses that have one of those organizations as a foreign key. NB: can be one number for one organization
        + match: python mathematics (string, optional) - search for courses that include (at least some of) those words in their title or short_description
        + limit: 10 (number, optional) - return {limit} courses
        + offset: 0 (number, optional) - skip the first {offset} results; used for pagination
        + start: ["2018-04-30T06:00:00Z", "2018-06-30T06:00:00Z"] (string, optional) - cf. end
        + categories: [13, 42] (array[number], optional) - return courses that have one of those categories as a foreign key. NB: can be one number for one category
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5


+ Response 200 (application/json)
    + Attributes
        + meta
            + count: 10 (number, required) - number of courses effectively returned
            + offset: 0 (number, required) - number of courses skipped
            + total_count: 240 (number, required) - total number of hits for the search parameters
        + objects: array[Course]

# Group Organization
Organization-related resources for the richie search API.

## GET /organizations/{organization_id}
A single organization object. Access through this API is read-only (and thus GET only) as we're interacting with ElasticSearch and not the underlying model.

See the Organization data structure for more information.

+ Request
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes (Organization)

## GET /organizations?limit&offset&name
Collection of all organizations indexed in ElasticSearch. Can be filtered and selected through search query parameters.

+ Request
    + Parameters
        + limit: 10 (number, optional) - return {limit} categories
        + offset: 0 (number, optional) - skip the first {offset} results; used for pagination
        + name: université (string, optional) - match on the name field
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes
        + meta
            + count: 10 (number, required) - number of organizations effectively returned
            + offset: 0 (number, required) - number of organizations skipped
            + total_count: 89 (number, required) - total number of hits for the search parameters
        + objects: array[Organization]


# Group Persons
Person-related resources for the richie search API.

## GET /persons/{person_id}
A single person object. Access through this API is read-only (and thus GET only) as we're interacting with ElasticSearch and not the underlying model.

See the Person data structure for more information.

+ Request
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes (Person)

## GET /persons?limit&offset&name
Collection of all persons indexed in ElasticSearch. Can be filtered and selected through search query parameters.

+ Request
    + Parameters
        + limit: 10 (number, optional) - return {limit} persons
        + offset: 0 (number, optional) - skip the first {offset} results; used for pagination
        + query: science (string, optional) - match on the indexed text fields
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes
        + meta
            + count: 10 (number, required) - number of persons effectively returned
            + offset: 0 (number, required) - number of persons skipped
            + total_count: 89 (number, required) - total number of hits for the search parameters
        + objects: array[Person]
